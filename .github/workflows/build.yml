name: Build and Release AnymeX

on:
  push:
    tags:
      - 'v*' 
  workflow_dispatch:

jobs:
  build-mobile:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [android, ios]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Android with Split ABI
        if: matrix.platform == 'android'
        run: |
          flutter build apk --split-per-abi

      - name: Rename and Upload APKs (Split ABI)
        if: matrix.platform == 'android'
        run: |
          # Rename APKs to ensure the naming convention is kept
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/app-armeabi-v7a-release-split.apk
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/app-arm64-v8a-release-split.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/app-x86_64-release-split.apk

      - name: Build Universal APK
        if: matrix.platform == 'android'
        run: |
          flutter build apk --release
          
      - name: Rename and Upload Universal APK
        if: matrix.platform == 'android'
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-release-universal.apk

      - name: Build iOS
        if: matrix.platform == 'ios'
        run: |
          flutter build ios --release --no-codesign
          
      - name: Upload Artifact (Mobile)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/iphoneos/*.app

  build-desktop:
    if: github.ref == 'refs/heads/desktop'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'

      - name: Get Dependencies
        run: flutter pub get

      - name: Build Desktop
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter build linux --release
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            flutter build macos --release
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter build windows --release
          fi

      - name: Upload Artifact (Desktop)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: build/*/outputs/*

  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Changelog
        id: changelog
        run: |
          # Get the latest tag (excluding pre-release)
          latest_tag=$(git tag -l | grep -v -E "(-alpha|-beta)" | sort -V | tail -n 1)
          
          # If no valid release tag found, fallback to the first commit
          if [ -z "$latest_tag" ]; then
            echo "No release tags found, using the initial commit."
            latest_tag=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Latest release tag: $latest_tag"
          
          # Generate changelog from commits since the last tag
          echo "Changelog:" > changelog.txt
          git log $latest_tag..HEAD --pretty=format:"- %s (%an)" --grep=".*" >> changelog.txt
          
          cat changelog.txt

      - name: Upload Changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: changelog.txt
