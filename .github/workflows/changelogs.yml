name: Generate Changelog File and Create Release

on:
  push:
    tags:
      - "v*"  # Trigger on any tag push
  workflow_dispatch:

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Latest Non-Pre-Release Tag
        id: get_tag
        run: |
          # Get the latest tag excluding "alpha" and "beta" tags
          LATEST_TAG=$(git tag --list | grep -vE "beta|alpha" | sort -V | tail -n 1)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          # Generate commit list since the latest non-pre-release tag
          COMMITS=$(git log $LATEST_TAG..HEAD --pretty=format:"- [%h](https://github.com/${{ github.repository }}/commit/%H) %s")

          # Format changelog based on commit types
          FEATS=""
          FIXES=""
          OTHERS=""
          
          # Process commits and categorize them by type
          for commit in $COMMITS; do
            if echo "$commit" | grep -q "^.*feat.*"; then
              FEATS="${FEATS}\n$commit"
            elif echo "$commit" | grep -q "^.*fix.*"; then
              FIXES="${FIXES}\n$commit"
            else
              OTHERS="${OTHERS}\n$commit"
            fi
          done

          # Construct the changelog with sections for each type of commit
          CHANGELOG="### Changelog for ${{ github.ref_name }}\n\n"

          if [ -n "$FEATS" ]; then
            CHANGELOG="${CHANGELOG}\n#### New Features\n$FEATS"
          fi
          if [ -n "$FIXES" ]; then
            CHANGELOG="${CHANGELOG}\n#### Fixes & Improvements\n$FIXES"
          fi
          if [ -n "$OTHERS" ]; then
            CHANGELOG="${CHANGELOG}\n#### Other Changes\n$OTHERS"
          fi

          # Output the changelog to a markdown file
          echo -e "$CHANGELOG" > changelog.md

      - name: Commit and Push Changelog
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add changelog.md
          git commit -m "Add changelog for ${{ github.ref_name }}"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body_path: changelog.md
          draft: false
          prerelease: false
